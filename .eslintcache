[{"/Users/niyongabo/dev/Projects/forum-with-questions/src/App.js":"1","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Details/Details.js":"2","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Register/Register.js":"3","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/TopicComments/TopicComments.js":"4","/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/PrivateRoute/PrivateRoute.js":"5","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/Navbar.js":"6","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/AdminSideNav.js":"7","/Users/niyongabo/dev/Projects/forum-with-questions/src/utils/setAuthToken.js":"8","/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/auth.js":"9","/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/Modal/Modal.js":"10","/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/auth.js":"11","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Home/Home.js":"12","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/Footer.js":"13","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/CreateTopic/CreateTopic.js":"14","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Topics/Topics.js":"15","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Login/Login.js":"16","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/AdminLogin/AdminLogin.js":"17","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/AdminNav.js":"18","/Users/niyongabo/dev/Projects/forum-with-questions/src/utils/api.js":"19","/Users/niyongabo/dev/Projects/forum-with-questions/src/reportWebVitals.js":"20","/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/AppContainer/AppContainer.js":"21","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/ErrorPage404/ErrorPage404.js":"22","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Admin/Admin.js":"23","/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/types.js":"24","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/SubNav.js":"25","/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/Loading/Loading.js":"26","/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/BackDrop/BackDrop.js":"27","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/PrepareTest.js":"28","/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/prepare-test.js":"29","/Users/niyongabo/dev/Projects/forum-with-questions/src/index.js":"30","/Users/niyongabo/dev/Projects/forum-with-questions/src/store.js":"31","/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/Alert/Alert.js":"32","/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/index.js":"33","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/TopicsList/TopicsList.js":"34","/Users/niyongabo/dev/Projects/forum-with-questions/src/utils/search.js":"35","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Users/Users.js":"36","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/AdminCreateTopic/AdminCreateTopic.js":"37","/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/prepare-test.js":"38","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/TestQuestions/TestQuestions.js":"39","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/TestQuestionsList/TestQuestionsList.js":"40","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/Tests/Tests.js":"41","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/DoTest/DoTest.js":"42","/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/do-test.js":"43","/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/do-test.js":"44","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/PublicFooter.js":"45","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Users/Admins.js":"46","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Users/RegisterAdmin.js":"47","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/TestResults/TestResults.js":"48","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/EditorToolbar/EditorToolbar.js":"49","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/EditorComponent/EditorComponent.jsx":"50"},{"size":3267,"mtime":1634749947364,"results":"51","hashOfConfig":"52"},{"size":23076,"mtime":1644233045837,"results":"53","hashOfConfig":"52"},{"size":11404,"mtime":1637834360164,"results":"54","hashOfConfig":"52"},{"size":12211,"mtime":1634739582522,"results":"55","hashOfConfig":"52"},{"size":582,"mtime":1633541355174,"results":"56","hashOfConfig":"52"},{"size":8441,"mtime":1637748210028,"results":"57","hashOfConfig":"52"},{"size":2308,"mtime":1634910778578,"results":"58","hashOfConfig":"52"},{"size":372,"mtime":1633541356331,"results":"59","hashOfConfig":"52"},{"size":2179,"mtime":1634147539557,"results":"60","hashOfConfig":"52"},{"size":1957,"mtime":1634901559463,"results":"61","hashOfConfig":"52"},{"size":1433,"mtime":1634916196596,"results":"62","hashOfConfig":"52"},{"size":5505,"mtime":1637772960126,"results":"63","hashOfConfig":"52"},{"size":1403,"mtime":1637748125680,"results":"64","hashOfConfig":"52"},{"size":23136,"mtime":1634746751976,"results":"65","hashOfConfig":"52"},{"size":6429,"mtime":1637776449591,"results":"66","hashOfConfig":"52"},{"size":9163,"mtime":1637747435352,"results":"67","hashOfConfig":"52"},{"size":8878,"mtime":1637747396469,"results":"68","hashOfConfig":"52"},{"size":2195,"mtime":1634910749298,"results":"69","hashOfConfig":"52"},{"size":268,"mtime":1637743258186,"results":"70","hashOfConfig":"52"},{"size":362,"mtime":1633541355168,"results":"71","hashOfConfig":"52"},{"size":2024,"mtime":1633541355172,"results":"72","hashOfConfig":"52"},{"size":579,"mtime":1633541355155,"results":"73","hashOfConfig":"52"},{"size":7636,"mtime":1634910829513,"results":"74","hashOfConfig":"52"},{"size":1059,"mtime":1634571059517,"results":"75","hashOfConfig":"52"},{"size":1644,"mtime":1634910808194,"results":"76","hashOfConfig":"52"},{"size":748,"mtime":1633541355173,"results":"77","hashOfConfig":"52"},{"size":318,"mtime":1633541355173,"results":"78","hashOfConfig":"52"},{"size":8695,"mtime":1635354646521,"results":"79","hashOfConfig":"52"},{"size":2628,"mtime":1634912366506,"results":"80","hashOfConfig":"52"},{"size":500,"mtime":1633541355166,"results":"81","hashOfConfig":"52"},{"size":408,"mtime":1633541355174,"results":"82","hashOfConfig":"52"},{"size":360,"mtime":1633541355171,"results":"83","hashOfConfig":"52"},{"size":212,"mtime":1634545783483,"results":"84","hashOfConfig":"52"},{"size":6869,"mtime":1637776538084,"results":"85","hashOfConfig":"52"},{"size":436,"mtime":1637775675420,"results":"86","hashOfConfig":"52"},{"size":6439,"mtime":1634906349373,"results":"87","hashOfConfig":"52"},{"size":776,"mtime":1634149844084,"results":"88","hashOfConfig":"52"},{"size":2214,"mtime":1634900430946,"results":"89","hashOfConfig":"52"},{"size":7306,"mtime":1635358359900,"results":"90","hashOfConfig":"52"},{"size":2086,"mtime":1635358526712,"results":"91","hashOfConfig":"52"},{"size":5623,"mtime":1634750441583,"results":"92","hashOfConfig":"52"},{"size":25496,"mtime":1638651301296,"results":"93","hashOfConfig":"52"},{"size":2101,"mtime":1634666544902,"results":"94","hashOfConfig":"52"},{"size":2593,"mtime":1635353521073,"results":"95","hashOfConfig":"52"},{"size":2053,"mtime":1637747182428,"results":"96","hashOfConfig":"52"},{"size":7674,"mtime":1637777206921,"results":"97","hashOfConfig":"52"},{"size":11402,"mtime":1634746101549,"results":"98","hashOfConfig":"52"},{"size":7332,"mtime":1635700412953,"results":"99","hashOfConfig":"52"},{"size":4357,"mtime":1635357421765,"results":"100","hashOfConfig":"52"},{"size":963,"mtime":1635358259312,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"nlhqyr",{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"119"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/niyongabo/dev/Projects/forum-with-questions/src/App.js",[],["221","222"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Details/Details.js",["223"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Register/Register.js",["224","225","226","227","228","229"],"import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { AiOutlineLogin, AiOutlineUser, AiOutlineUserAdd, } from \"react-icons/ai\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { API_URL, CONFIG } from \"../../utils/api\";\nimport { TOKEN_NAME } from \"../../utils/api\";\nimport { connect } from \"react-redux\";\nimport { LoginSuccess, storeAccountCategory } from \"../../actions/auth\";\nimport Loading from '../../shared/Loading/Loading';\nimport Alert from '../../shared/Alert/Alert';\nimport Navbar from \"../../components/Navbar\";\nimport PublicFooter from \"../../components/PublicFooter\";\nimport Modal from \"../../shared/Modal/Modal\";\nimport { ACCOUNT_CATEGORY } from \"../../actions/types\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport Footer from \"../../components/Footer\";\n\nclass Register extends Component {\n    state = {\n        loading: false,\n        error: { element: \"\", msg: \"\" },\n        fname: \"\",\n        lname: \"\",\n        username: \"\",\n        password: \"\",\n        modal: false,\n        loggedMember: \"\",\n    };\n\n    componentDidMount() {\n        if (this.props.isAuthenticated === true) {\n            this.props.history.push(\"/topics\");\n        }\n    }\n    RegisterUser = async (e) => {\n        e.preventDefault();\n        \n        console.log(\"Button clicked!\");\n        this.setState({error: {\n            element: \"\",\n            msg: \"\",\n        }});\n        try {\n            // validation\n            if (this.state.fname.length <= 1) {\n                return this.setState({error: {\n                    element: \"fname\",\n                    msg: \"The first name must not be less than 1 character\",\n                }});\n            }\n            if (this.state.lname.length <= 1) {\n                return this.setState({error: {\n                    element: \"lname\",\n                    msg: \"The last name must not be less than 1 character\",\n                }});\n            }\n        \n            if (this.state.username.length <= 1) {\n                return this.setState({error: {\n                    element: \"username\",\n                    msg: \"The username must not be less than 1 character\",\n                }});\n            }\n        \n        \n            // password\n            if (this.state.password.length <= 1) {\n                return this.setState({error: {\n                    element: \"password\",\n                    msg: \"The password must not be less than 1 character\",\n                }});\n            }\n    \n            this.setState({loading: true});\n\n            let fname = this.state.fname;\n            let lname = this.state.lname;\n            let username = this.state.username;\n            let password = this.state.password;\n\n            const res = await axios.post(\n                `${API_URL}/users`,\n                {\n                    fname,\n                    lname,\n                    username,\n                    password,\n                },\n                CONFIG\n            );\n            \n            this.setState({loading: true});\n    \n            this.props.history.push(\"/login\");  \n            return false;\n    \n        // errors\n        } catch (error) {\n            console.log(\"Reg err: \", {...error});\n            this.setState({loading: false});\n    \n            if (error.response === undefined) {\n                return this.setState({error: {\n                    element: \"main\",\n                    msg: \"Network error!\",\n                }});\n            }\n        \n            if (error.response.status === 401) {\n                return this.setState({error: {\n                    element: \"main\",\n                    msg: error.response.data.msg,\n                }});\n            } else if (error.response.status === 400) {\n                return this.setState({error: {\n                    element: \"main\",\n                    msg: error.response.data.errors ? error.response.data.errors[0].msg : \"Something went wrong\",\n                }});\n            } else {\n                return this.setState({error: {\n                    element: \"main\",\n                    msg: error.response.data.msg,\n                }});\n            }\n        }\n    };\n    render() {\n\n        return (\n            <Fragment>\n                <div className=\"bg-white\">\n                    <Navbar />\n                    <div className=\"row\">\n                        <div className=\"col xl4 l4 m3 s12\"/>\n                        <div className=\"col xl4 l4 m3 s12\">\n                        <div className=\"login-container animate__animated animate__zoomIn\">\n                            <Link to=\"/\" style={{height: '30px'}}><IoMdArrowRoundBack className=\"left regist-bars\" /> <div style={{width: 'fill-content', paddingTop: '7px', paddingLeft: '48px', color: '#165877', paddingBottom: '6px'}}>Back</div></Link>\n                            <form onSubmit={this.RegisterUser}>\n                                <h1 className=\"center-align\" style={{margin: '0px'}}><AiOutlineUserAdd className=\"login-icon\" /></h1>\n                                \n                                <div className=\"center-align\">\n                                    <div className=\"my-title\" style={{marginBottom: '0px'}}>Register</div>\n                                </div>\n                                {/* <h4 style={{margin: '5px'}} className=\"center-align\">Cooperative</h4> */}\n                                <div className=\"row\">\n                                    <div className=\"input-field col s12\">\n                                        <input\n                                            onChange={(e) => {\n                                                this.setState({fname: e.target.value});\n                                                this.setState({error: { element: \"\", msg: \"\" }});\n                                            }}\n                                            value={this.state.fname}\n                                            disabled={this.state.loading}\n                                            placeholder=\"First name\" type=\"text\" className={`validate browser-default my-input ${this.state.error.element === \"fname\" ? 'danger-input' : ''}`} />\n                                        {this.state.error.element === \"fname\" ? (\n                                            <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                        ) : \"\"}\n                                        \n                                    </div>\n                                    <div className=\"input-field col s12\">\n                                        <input\n                                            onChange={(e) => {\n                                                this.setState({lname: e.target.value});\n                                                this.setState({error: { element: \"\", msg: \"\" }});\n                                            }}\n                                            value={this.state.lname}\n                                            disabled={this.state.loading}\n                                            placeholder=\"Last name\" type=\"text\" className={`validate browser-default my-input ${this.state.error.element === \"lname\" ? 'danger-input' : ''}`} />\n                                        {this.state.error.element === \"lname\" ? (\n                                            <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                        ) : \"\"}\n                                        \n                                    </div>\n                                    <div className=\"input-field col s12\">\n                                        <input\n                                            onChange={(e) => {\n                                                this.setState({username: e.target.value});\n                                                this.setState({error: { element: \"\", msg: \"\" }});\n                                            }}\n                                            value={this.state.username}\n                                            disabled={this.state.loading}\n                                            placeholder=\"Username\" type=\"text\" className={`validate browser-default my-input ${this.state.error.element === \"username\" ? 'danger-input' : ''}`} />\n                                        {this.state.error.element === \"username\" ? (\n                                            <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                        ) : \"\"}\n                                        \n                                    </div>\n                                    <div className=\"input-field col s12\">\n                                        <input\n                                            onChange={(e) => {\n                                                this.setState({password: e.target.value});\n                                                this.setState({error: { element: \"\", msg: \"\" }});\n                                            }}\n                                            value={this.state.password}\n                                            disabled={this.state.loading}\n                                            placeholder=\"Password\" type=\"password\" className={`validate browser-default my-input ${this.state.error.element === \"password\" ? 'danger-input': ''}`} />\n                                        {this.state.error.element === \"password\" ? (\n                                            <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                        ) : \"\"}\n                                        \n                                    </div> \n                                    <div className=\"input-field col s12\">\n                                        <center>\n                                            <Alert alert=\"danger\" msg={this.state.error.element === \"main\" ? (this.state.error.msg) : ''} />\n                                            {this.state.loading === true ? (<Loading msg=\"Please wait\" />) : \n                                            (<button type=\"submit\" className=\"my-btn bg-color hoverable main-btn\"><AiOutlineLogin className=\"icon\" /> Register</button>)}\n                                        </center>\n                                    </div>\n                                </div>\n                                <center><NavLink to=\"/login\" className=\"hoverable\" style={{cursor: 'pointer', padding: '10px', borderRadius: '3px', color: '#004161'}}>Registered? Login</NavLink></center>\n                                <br/>\n                                <center>\n                                    <label>E-Physics Class</label><br/>\n                                    <small><label>@2021</label></small>\n                                </center>\n                            </form>\n                        </div>\n                        </div>\n                        <div className=\"col xl4 l4 m3 s12\"/>\n                    </div>\n                    <Footer />\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n  \nexport default connect(mapStateToProps, { LoginSuccess, storeAccountCategory })(Register);",["230","231"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/TopicComments/TopicComments.js",["232","233","234","235","236","237"],"import React, { Component } from 'react'\nimport setAuthToken from '../../utils/setAuthToken'\nimport axios from 'axios'\nimport { API_URL } from '../../utils/api'\nimport searchData from \"../../utils/search\"\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\"\nimport { LogoutTheUser, toogleNav } from \"../../actions/auth\"\nimport SubNav from '../../components/SubNav'\nimport Loading from '../../shared/Loading/Loading'\nimport AdminSideNav from '../../components/AdminSideNav'\nimport AdminNav from '../../components/AdminNav';\nimport { MdArrowBack, MdDeleteForever } from 'react-icons/md'\n\n\nexport class TopicComments extends Component {\n    state = {\n        loading: false,\n        comments: \"\",\n        topic: \"\",\n    }\n\n    loadComments = async (topic_id) => {\n        this.setState({ loading: true });\n        try {\n            const res = await axios.get(`${API_URL}/discs/topic/${topic_id}`);\n            console.log(\"coom: \", res.data.data)\n            this.setState({ comments: res.data.data });\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(\"Comm err: \", {...error});\n        }\n    }\n\n    loadTopicDetails = async () => {\n        try {\n            this.setState({ loading: true });\n            setAuthToken();\n            const res = await axios.get(`${API_URL}/topics`);\n            this.setState({ topics: res.data.data });\n            if (this.state.topic === \"\" && this.props.match.params.topic_id !== undefined) {\n                for (let i in res.data.data) {\n                    if (res.data.data[i].topic_id === this.props.match.params.topic_id) {\n                        this.setState({ topic: res.data.data[i] });\n                        this.loadComments(res.data.data[i].topic_id);\n                        console.log(\"Slect: \", res.data.data[i]);\n                        break;\n                    }\n                }\n            }\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(\"Topic err: \", error);\n        }\n    }\n\n    removeTopic = async () => {\n        if (window.confirm(\"Are you sure do you want to delete this topic?\") === true) {\n            if (this.props.match.params.topic_id !== null && this.props.match.params.topic_id !== undefined) {\n                this.setState({ loading: true });\n                try {\n                    const res = await axios.delete(`${API_URL}/topics/${this.props.match.params.topic_id}`);\n                    console.log(res);\n                    if (res.status === 200) {\n                        this.props.history.push(\"/topics-list\");\n                        alert(\"Topic has deleted successfully!\")\n                    }\n                    this.setState({ loading: false });\n                } catch (error) {\n                    alert(\"Error occured, make sure that the topic is available!\")\n                    this.setState({ loading: false });\n                    console.log(\"Delete err: \", {...error})\n                }\n            } else {\n                this.setState({ loading: false });\n                alert(\"Please choose a valid topic!\");\n            }\n        }\n    }\n\n    removeTopicComment = async (discussion) => {\n        if (window.confirm(\"Are you sure do you want to delete this discussion?\") === true) {\n            if (discussion) {\n                this.setState({ loading: true });\n                try {\n                    const res = await axios.delete(`${API_URL}/discs/disctext/${discussion}`);\n                    console.log(res);\n                    if (res.status === 200) {\n                        alert(\"Discussion has deleted successfully!\")\n                        this.setState({ comments: \"\" });\n                        if (this.props.match.params.topic_id !== null && this.props.match.params.topic_id !== undefined) {\n                            this.loadComments(this.props.match.params.topic_id);\n                        }\n                    }\n                } catch (error) {\n                    alert(\"Error occured, make sure that the discussion is available!\")\n                    this.setState({ loading: false });\n                    console.log(\"Delete err: \", {...error})\n                }\n            } else {\n                this.setState({ loading: false });\n                alert(\"Please choose a valid topic!\");\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.props.match.params.topic_id !== null && this.props.match.params.topic_id !== undefined) {\n            this.loadTopicDetails();\n            this.loadComments(this.props.match.params.topic_id);\n        } else {\n            alert(\"Please select topic\");\n        }\n    }\n    \n    render() {\n        return (\n            <div className=\"admin-container\">\n                {/* Nav Bar here */}\n                <AdminNav />\n                <div className=\"row\">\n                    <div className=\"col xl2 l2 m3 s12\">\n                        {/* Side Nav here */}\n                        <AdminSideNav />\n                    </div>\n                    <div className=\"col xl10 l10 m10 s12\">\n                        <div class=\"main admin-container-main animate__animated animate__zoomIn\">\n                            <div class=\"container-fluid\">\n                                <div className=\"row\" style={{marginTop: '20px', marginLeft: '10px', marginRight: '10px'}}>\n                                    <div className=\"col s6 m6 l6 xl6\" style={{fontWeight: 'bold', fontSize: '23px', marginBottom: '10px'}}><Link to=\"/topics-list\"><MdArrowBack className=\"my-icon-arrow\" /></Link>Topic title</div>\n                                    <div className=\"col s6 m6 l6 xl6\">\n                                        <button onClick={() => this.removeTopic()} className=\"waves-effect waves-light right my-btn hoverable main-btn\" style={{border: 'none', backgroundColor: 'rgb(149, 0, 0)', color: 'white'}}>Remove topic</button>\n                                    </div>\n                                    {   this.state.loading === true ? (\n                                        <div style={{marginTop: '30px'}} className=\"col l12 list-item-small animate__animated animate__zoomIn center\">\n                                            <Loading msg=\"Please wait\" />\n                                        </div>\n                                    ) : (<>\n                                    <div class=\"col s12 list-titl\" dangerouslySetInnerHTML={{__html: this.state.topic !== \"\" ? this.state.topic.topic_title : \"\"}}></div>\n                                    <div class=\"col s12 list-titl\">{this.state.topic.image !== undefined ? <img alt=\"\" className=\"topic-img\" src={`${API_URL}/${this.state.topic.image}`} /> : \"\"}</div>\n                                    <div class=\"col s12 list-details-selected\">{this.state.topic !== \"\" ? this.state.topic.description !== undefined ? this.state.topic.description : \"\" : \"\"}</div>\n                                    \n                                    {/* <hr style={{marginBottom: '0px'}} /> */}\n                                    <div class=\"row hidden-lg\" style={{marginBottom: \"0px\", boxShadow: '0px 11px 8px -10px #797979' ,paddingBottom: '20px'}}>\n                                        <div class=\"col xl6 l6 m6 s6\" style={{marginTop: \"5px\"}}>\n                                            <span class=\"editor-title\"><i class=\"fas fa-edit\"></i></span>\n                                            <span class=\"editor-name\">{this.state.topic !== \"\" ? this.state.topic.fname + \" \" + this.state.topic.lname : \"\"}</span>\n                                        </div>\n                                        <div class=\"col xl6 l6 m6 s6\">\n                                            <div class=\"time-cont\"><i className=\"fas fa-calendar\"></i> {this.state.topic !== \"\" ? `${this.state.topic.hour} ${this.state.topic.date} ${this.state.topic.year}` : \"\"}</div>\n                                        </div>\n                                    </div>\n                                    </>)}\n                                    <div className=\"col s12\" style={{fontWeight: 'bold', fontSize: '23px', marginTop: '30px', marginBottom: '-20px'}}>Topic comments</div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col s12 m12\">\n                                        <div class=\"white\">\n                                            <table class=\"bordered highlight responsive-table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>#</th>\n                                                        <th>Names</th>\n                                                        <th>Image</th>\n                                                        <th>Comment</th>\n                                                        <th>Description</th>\n                                                        <th>Date and Time</th>\n                                                        <th></th>\n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.loading === true && (\n                                                        <tr>\n                                                            <td colSpan={7}>\n                                                                <center>\n                                                                    <div className=\"list-item\">\n                                                                        <center><Loading msg=\"Please wait\" /></center>\n                                                                    </div>\n                                                                </center>\n                                                            </td>\n                                                        </tr>\n                                                    )}\n\n                                                    {this.state.comments === \"\" || this.state.loading === true ? \"\" : \n                                                        this.state.comments.map((item, i) => (\n                                                            <tr key={i + 1}>\n                                                                <td>{i + 1}</td>\n                                                                <td>{item.fname} {item.lname}</td>\n                                                                <td>{item.image !== undefined ? (<img alt=\"\" className=\"topic-img\" style={{maxHeight: '100px'}} src={`${API_URL}/${item.image}`} />) : \"\"}</td>\n                                                                <td>{item.comment}</td>\n                                                                <td>{item.description}</td>\n                                                                <td>{item.hour} {item.day} {item.date} {item.year}</td>\n                                                                <td>\n                                                                    <MdDeleteForever className=\"remove-icon right\" onClick={() => this.removeTopicComment(item.discussion_message_id)} />\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopicComments\n",["238","239"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/PrivateRoute/PrivateRoute.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/Navbar.js",[],["240","241"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/AdminSideNav.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/utils/setAuthToken.js",[],["242","243"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/auth.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/Modal/Modal.js",["244","245","246","247","248","249","250","251"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BackDrop from \"../BackDrop/BackDrop\";\nimport { bounce, pulse, slideInDown, flipInX } from 'react-animations';\nimport Radium, {StyleRoot} from 'radium';\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { MdInfo } from \"react-icons/md\";\n\nconst Modal = (props) => {\n  const {\n    close,\n    theme,\n    title,\n    className,\n    backDrop,\n    backDropClose,\n    closeBackdrop,\n  } = props;\n  \n  return (\n    <div>\n    \n      {backDrop && (\n        <BackDrop\n          close={\n            backDropClose\n              ? close\n              : () => (closeBackdrop === true ? close() : null)\n          }\n        />\n      )}\n\n      <div\n        className={\n            `modal ${className}`}\n        role=\"document\"\n        style={{backgroundColor: '#093950 !important'}}\n      >\n        <div className=\"modal-content\">\n          <div className={`modal-header bg-${theme}`}>\n            <h5 className=\"modal-title text-white font-bold\">{title}</h5>\n            <AiFillCloseCircle\n              className={`close right close-icon ${\n                theme === \"light\" ? \"text-secindary\" : \"text-white\"\n              } `}\n              aria-label=\"Close\"\n              onClick={close}\n            >\n              <span aria-hidden=\"true\">×</span>\n            </AiFillCloseCircle>\n          </div>\n          <div\n            className=\"modal-body p-0\"\n          >\n            {props.children}\n          </div>\n          {/* <div className=\"modal-footer border-0\"> </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  close: PropTypes.func,\n  theme: PropTypes.string,\n  backDrop: PropTypes.bool,\n  closeBackdrop: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  className: \"\",\n  title: \" \",\n  close: () => {},\n  theme: \"light\",\n  backDrop: true,\n  closeBackdrop: false,\n};\n\nexport default Modal;","/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/auth.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Home/Home.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/Footer.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/CreateTopic/CreateTopic.js",["252","253","254"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport Loading from '../../shared/Loading/Loading';\nimport Alert from '../../shared/Alert/Alert';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { LogoutTheUser, toogleNav } from \"../../actions/auth\";\nimport { API_URL } from '../../utils/api';\nimport { Link } from 'react-router-dom';\nimport setAuthToken from '../../utils/setAuthToken';\nimport searchData from \"../../utils/search\";\nimport Modal from '../../shared/Modal/Modal';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\n// import { create } from 'doka';\n\nconst thumbsContainer = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 16,\n    padding: 20\n};\n\nconst thumb = {\n    position: \"relative\",\n    display: \"inline-flex\",\n    borderRadius: 2,\n    border: \"1px solid #eaeaea\",\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: \"border-box\"\n};\n\nconst thumbInner = {\n    display: \"flex\",\n    minWidth: 0,\n    overflow: \"hidden\"\n};\n\nconst img = {\n    display: \"block\",\n    width: \"auto\",\n    height: \"100%\"\n};\n\nconst thumbButton = {\n    position: \"absolute\",\n    right: 10,\n    bottom: 10,\n    background: \"rgba(0,0,0,.8)\",\n    color: \"#fff\",\n    border: 0,\n    borderRadius: \".325em\",\n    cursor: \"pointer\"\n};\n\nconst editImage = (image, done) => {\n    const imageFile = image.doka ? image.doka.file : image;\n    const imageState = image.doka ? image.doka.data : {};\n};\n\n\n\nconst CreateTopic = (props) => {\n    const [files, setFiles] = useState([]);\n    const [topic, setTopic] = useState(\"\");\n    const [img_desc, setImgDesc] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState({ element: \"\", msg: \"\" });\n    const [success, setSuccess] = useState(\"\");\n    const [user, setUser] = useState(\"\");\n    const [tab, setTab] = useState(1);\n    const [topics, setTopics] = useState(\"\");\n    const [search, setSearch] = useState(\"\");\n    const [loadingTopics, setLoadingTopics] = useState(\"\");\n    const [modal, setModal] = useState(false);\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: \"image/*\",\n        onDrop: (acceptedFiles) => {\n        setFiles(\n            acceptedFiles.map((file) =>\n            Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })\n            )\n        );\n        }\n    });\n\n    const thumbs = files.map((file, index) => (\n        <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n            <img src={file.preview} style={img} alt=\"\" />\n        </div>\n        <button\n            style={thumbButton}\n            onClick={() => setFiles([])}\n        >\n            delete\n        </button>\n        </div>\n    ));\n\n    const createPost = async (e) => {\n        e.preventDefault();\n\n        setSuccess(\"\");\n        if (tab === 1) {\n            if ((topic.length === 0 || topic === \"\")) {\n                return setError({\n                    element: \"topic\",\n                    msg: \"Please type topic\"\n                })\n            }\n            try {\n                setLoading(true);\n                const res = await axios({\n                    url: `${API_URL}/topics/text`,\n                    method: 'POST',\n                    data: {\n                        user_id: user.admin_id,\n                        topic_title: topic,\n                    },\n                });\n                if (res.status === 200) {\n                    setTopic(\"\");\n                    setSuccess(\"Topic has been created successfully\");\n                    loadTopics(user.admin_id);\n                }\n                console.log(\"Post res: \", res);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n                console.log(\"To err: \", {...error});\n            }\n        } else {\n            // Post text\n            if ((files.length === 0)) {\n                return setError({\n                    element: \"image\",\n                    msg: \"Please select image file\"\n                })\n            }\n            if ((img_desc.length === 0 || img_desc === \"\")) {\n                return setError({\n                    element: \"img_desc\",\n                    msg: \"Please type image description\"\n                })\n            }\n            // Image upload\n            try {\n                setLoading(true);\n                const formData = new FormData();\n                formData.append(\"user_id\", user.admin_id);\n                formData.append(\"image\", files[0]);\n                formData.append(\"description\", img_desc);\n\n                const result = await axios({\n                    url: `${API_URL}/topics/img`,\n                    method: 'POST',\n                    data: formData,\n                    headers: {\n                        'Content-Type': \"multipart/form-data\"\n                    }\n                });\n                if (result.status === 200) {\n                    setFiles([]);\n                    setImgDesc(\"\");\n                    setSuccess(\"Topic has been created successfully\");\n                    loadTopics(user.admin_id);\n                }\n                setLoading(false);\n                console.log(\"Post res: \", result);\n            } catch (error) {\n                setLoading(false);\n                console.log(\"To err img: \", {...error});\n            }\n        }\n        \n    }\n    const loadTopics = async (user_id) => {\n        setLoadingTopics(true);\n        try {\n            setAuthToken();\n            const res = await axios.get(`${API_URL}/topics/user/${user_id}`);\n            setTopics(res.data.data);\n            setLoadingTopics(false);\n            console.log(\"My topics: \", res.data.data);\n        } catch (error) {\n            setLoadingTopics(false);\n            console.log(\"Topic err: \", error);\n        }\n    }\n\n    const handleChangeTopic = (content) => {\n        setTopic(content)\n    }\n    useEffect(() => {\n        console.log(\"Current user state: \", props.auth);\n        const user = props.auth.userCategory === \"admin\" ? props.auth.user !== null ? props.auth.user : props.auth.data : null;\n        if (user !== null) {\n            if (props.auth.user !== null) {\n                setUser(user);\n            } else {\n                setUser(user);\n            }\n            loadTopics(user.admin_id);\n        }\n    }, [props.auth])\n\n    useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach((file) => URL.revokeObjectURL(file.preview));\n        },[files]\n    );\n    return (\n        <Fragment>\n            <div>\n                {/* <AdminNav /> */}\n                <section>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\" style={{marginBottom: '0px'}}>\n                            <div className=\"col xl3 l3 m12 s12 left-col hidden-sm\">\n                                <h5 className=\"my-title\" style={{color: '#fff'}}><Link to=\"/topics-list\"><IoMdArrowRoundBack className=\"my-icon-arrow\" /></Link> My topics</h5>\n                                <input onChange={(e) => setSearch(e.target.value)} value={search} type=\"search\" className=\"browser-default my-input\" placeholder=\"Search keyword...\" />\n                                <section className=\"section left-section\">\n                                {loadingTopics === true ? (\n                                    <center>\n                                        <div className=\"list-item-small\">\n                                            <Loading msg=\"Please wait\" />\n                                        </div>\n                                    </center>\n                                ) : topics === \"\" ? \"\" : \n                                searchData(topics, search, { topic_id: true }).map((item, i) => (\n                                    <Link to={`/details/${item.topic_id}`}>\n                                        <div className=\"list-item-small\">\n                                            <div className=\"row\" style={{marginBottom: '0px'}}>\n                                                <div className=\"col xl2 l2 m2 s3\">\n                                                    <div className=\"user-list-icon-small\">\n                                                        <i className=\"fas fa-user-circle\"></i>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col xl10 l10 m10 s9\">\n                                                    <div className=\"list-title-small\" dangerouslySetInnerHTML={{__html: item.topic_title !== undefined ? item.topic_title : \"\" }}></div>\n                                                    <div>{item.image !== undefined ? (<img alt=\"\" className=\"topic-img\" src={`${API_URL}/${item.image}`} />) : \"\"}</div>\n                                                    <div className=\"list-details-small\" dangerouslySetInnerHTML={{__html: item.description !== undefined ? item.description : \"\" }}></div>\n                                                    <div className=\"row\" style={{marginBottom: \"0px\"}}>\n                                                        <div className=\"col xl6 l6 m6 s6\" style={{marginTop: \"15px\"}}>\n                                                            {/* <span className=\"editor-title-small\"><i className=\"fas fa-edit\"></i>Editor</span>\n                                                            <span className=\"editor-name-small\">{item.fname} {item.lname}</span> */}\n                                                        </div>\n                                                        <div className=\"col xl6 l6 m6 s6\">\n                                                            <div className=\"time-cont\"><i className=\"fas fa-calendar\"></i> {item.hour} {item.month} {item.date} {item.year}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Link>\n                                ))}\n                                </section>\n                            </div>\n                            <div className=\"col xl9 l9 m12 s12\">\n                            \n                                <div className=\"list-item animate__animated animate__zoomIn\">\n                                    <form onSubmit={createPost}>\n                                        <div>\n                                            <div className=\"row\">\n                                                <div className=\"col xl2 l2 m2 s12\" />\n                                                <div className=\"col xl12 l12 m12 s12\">\n                                                <div class=\"row\">\n                                                    <div class=\"col s12\">\n                                                        <center>\n                                                            <h6 style={{marginBottom: '1px'}} className=\"my-title\"><i className=\"fas fa-edit\"></i> Create new post</h6>\n                                                        </center>\n                                                        <br />\n                                                        <ul class=\"tabs\" style={{backgroundColor: '#daf0fd'}}>\n                                                            <li onClick={() => setTab(1)} style={{cursor: 'pointer'}} class={`tab col s3 ${tab === 1 ? \"selected-tab\" : \"\"}`}><span>Post text</span></li>\n                                                            <li onClick={() => setTab(2)} style={{cursor: 'pointer'}} class={`tab col s3 ${tab === 2 ? \"selected-tab\" : \"\"}`}><span>Image</span></li>\n                                                            <li className=\"tab hidden-lg\" onClick={() => setModal(true)}>My topics</li>\n                                                        </ul>\n                                                        </div>\n                                                        <div style={{padding: '10px', paddingTop: '20px'}} class=\"col s12\">\n                                                            {tab === 1 ? (\n                                                                <div className=\"animate__animated animate__zoomIn\" style={{width: '100%'}}>\n                                                                    <center>\n                                                                        <ReactQuill value={topic}\n                                                                            className=\"rounded mb-10\"\n                                                                            onChange={handleChangeTopic} />\n                                                                    </center>\n                                                                    {error.element === \"topic\" ? (\n                                                                        <span className=\"helper-text danger-color\">{error.msg}</span>\n                                                                    ) : \"\"}\n                                                                </div>\n                                                            ) : (\n                                                                <div>\n                                                                    <section className=\"container animate__animated animate__zoomIn\">\n                                                                        <div {...getRootProps({ className: `dropzone ${error.element === \"image\" && files.length === 0 ? 'danger-input': ''}` })}>\n                                                                            <i className=\"fas fa-image drop-img\"></i>\n                                                                            <input {...getInputProps()} />\n                                                                            <p>Drag and drop some files here, or click to select files</p>\n                                                                        </div>\n                                                                        {files.length === 0 ? \"\" : (\n                                                                            <aside style={thumbsContainer}>{thumbs}</aside>\n                                                                        )}\n                                                                        \n                                                                        <center>\n                                                                            {error.element === \"image\" && files.length === 0 ? (\n                                                                                <span className=\"helper-text danger-color\">{error.msg}</span>\n                                                                            ) : \"\"}\n                                                                        </center>\n                                                                    </section>\n                                                                    \n                                                                    \n                                                                    {files.length !== 0 ? (\n                                                                        <>\n                                                                        <br />\n                                                                        <textarea \n                                                                        onChange={(e) => {\n                                                                            setImgDesc(e.target.value);\n                                                                            setError({ element: \"\", msg: \"\" });\n                                                                            setSuccess(\"\");\n                                                                        }}\n                                                                        style={{padding: '10px', color: 'black', backgroundColor: '#fff'}} placeholder=\"Image description\" name=\"\" id=\"\" cols=\"30\" rows=\"40\" \n                                                                        className={`my-textarea ${error.element === \"img_desc\" ? 'danger-input': ''}`}>{img_desc}</textarea>\n                                                                        {error.element === \"img_desc\" ? (\n                                                                            <span className=\"helper-text danger-color\">{error.msg}</span>\n                                                                        ) : \"\"}\n                                                                        <br /><br />\n                                                                        </>\n                                                                    ) : (\"\")}\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                    <br />\n                                                    <center>\n                                                        {success !== \"\" && (\n                                                            <Alert alert=\"success\" msg={success} />\n                                                        )}\n                                                        <Alert alert=\"danger\" msg={error.element === \"main\" ? (error.msg) : ''} />\n                                                        {loading === true ? (<Loading msg=\"Please wait\" />) : \n                                                        (<button className=\"btn-large waves-effect outline-btn nav-outline-btn post-btn\" type=\"submit\"><i className=\"fas fa-edit\"></i> Create</button>)}\n                                                    </center>\n                                                </div>\n                                                <div className=\"col xl2 l2 m2 s12\" />\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                {/* <Footer /> */}\n            </div>\n\n            {/* Modal */}\n            {modal === true && (\n                <Modal\n                    close={() => setModal(false)}\n                    backDrop={true}\n                    closeBackdrop={false}\n                    theme=\"primary\"\n                    title=\"My topics\"\n                    className=\"open animate-in sm-modal menus-container-mobile animate__animated animate__bounceIn\"\n                    >\n                    <div className=\"left-col\" style={{backgroundColor: '#093950',     marginLeft: '-16px', marginRight: '-24px'}}>\n                        <div className=\"\" style={{marginBottom: '50px'}}>\n                            <input onChange={(e) => setSearch(e.target.value)} value={search} type=\"search\" className=\"browser-default my-input\" placeholder=\"Search keyword...\" />\n                            <section className=\"section left-section\">\n                            {loadingTopics === true ? (\n                                <center>\n                                    <div className=\"list-item-small\">\n                                        <Loading msg=\"Please wait\" />\n                                    </div>\n                                </center>\n                            ) : topics === \"\" ? \"\" : \n                            searchData(topics, search, { topic_id: true }).map((item, i) => (\n                                <Link to={`/details/${item.topic_id}`}>\n                                    <div className=\"list-item-small animate__animated animate__zoomIn\">\n                                        <div className=\"row\" style={{marginBottom: '0px'}}>\n                                            <div className=\"col xl2 l2 m2 s3\">\n                                                <div className=\"user-list-icon-small\">\n                                                    <i className=\"fas fa-user-circle\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"col xl10 l10 m10 s9\">\n                                                <div className=\"list-title-small\" dangerouslySetInnerHTML={{__html: item.topic_title !== undefined ? item.topic_title : \"\"}}></div>\n                                                <div>{item.image !== undefined ? (<img alt=\"\" className=\"topic-img\" src={`${API_URL}/${item.image}`} />) : \"\"}</div>\n                                                <div className=\"list-details-small\" dangerouslySetInnerHTML={{__html: item.description !== undefined ? item.description : \"\" }}></div>\n                                                <div className=\"row\" style={{marginBottom: \"0px\"}}>\n                                                    <div className=\"col xl6 l6 m6 s6\" style={{marginTop: \"15px\"}}>\n                                                        {/* <span className=\"editor-title-small\"><i className=\"fas fa-edit\"></i>Editor</span>\n                                                        <span className=\"editor-name-small\">{item.fname} {item.lname}</span> */}\n                                                    </div>\n                                                    <div className=\"col xl6 l6 m6 s6\">\n                                                        <div className=\"time-cont\"><i className=\"fas fa-calendar\"></i> {item.hour} {item.month} {item.date} {item.year}</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n                            ))}\n                            </section>\n                        </div>\n                    </div>\n                </Modal>\n            )}\n        </Fragment>\n    )\n}\n\nCreateTopic.propTypes = {\n    auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    toogleNav: state.toogleNav,\n    userCategory: state.userCategory,\n});\nexport default connect(mapStateToProps, { LogoutTheUser, toogleNav })(\n    CreateTopic\n);","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Topics/Topics.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Login/Login.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/AdminLogin/AdminLogin.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/AdminNav.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/utils/api.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/reportWebVitals.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/AppContainer/AppContainer.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/ErrorPage404/ErrorPage404.js",[],["255","256"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Admin/Admin.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/types.js",[],["257","258"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/SubNav.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/Loading/Loading.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/BackDrop/BackDrop.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/PrepareTest.js",["259","260","261","262","263"],"import React, { Component, Fragment } from 'react'\nimport AdminNav from '../../components/AdminNav'\nimport AdminSideNav from '../../components/AdminSideNav'\nimport axios from \"axios\";\nimport { AiOutlineLogin, AiOutlineUser, } from \"react-icons/ai\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { API_URL, CONFIG } from \"../../utils/api\";\nimport { TOKEN_NAME } from \"../../utils/api\";\nimport { connect } from \"react-redux\";\nimport { addTestDetails, addTestQuestion, removeTestQuestion, addTestQuestionAnswer, removeTestQuestionAnswer, clearTestTemps } from \"../../actions/prepare-test\";\nimport TestQuestions from './TestQuestions/TestQuestions';\nimport TestQuestionsList from './TestQuestionsList/TestQuestionsList';\nimport { v4 as uuidv4 } from 'uuid';\nimport Loading from '../../shared/Loading/Loading';\nimport Modal from '../../shared/Modal/Modal'\nimport { MdAdd } from 'react-icons/md';\n\nexport class PrepareTest extends Component {\n  state = {\n    modal: false,\n    addQuestionTab: false,\n    loading: false,\n  }\n  submitExam = async () => {\n    if (this.props.test.test_title === \"\") {\n      return alert(\"Please fill test title\");\n    }\n    if (this.props.test.test_duration === \"\") {\n      return alert(\"Please fill test test duration\");\n    }\n    if (this.props.questions.length === 0) {\n      this.setState({ addQuestionTab: true });\n      return alert(\"Please add questions\");\n    }\n    const body = {\n      test_id: uuidv4(),\n      title: this.props.test.test_title,\n      duration: this.props.test.test_duration,\n      questions: this.props.questions\n    }\n    this.setState({ loading: true});\n    try {\n      const res = await axios.post(`${API_URL}/test`, body);\n      this.props.clearTestTemps();\n      this.setState({ loading: false});\n      console.log(\"Submitted!\", res);\n      alert(res.data.msg);\n    } catch (error) {\n      this.setState({ loading: false});\n      console.log(\"Submit err: \", {...error})\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"admin-container\">\n          {/* Nav Bar here */}\n          <AdminNav />\n          <div className=\"row\">\n            <div className=\"col xl2 l2 m3 s12\">\n              {/* Side Nav here */}\n              <AdminSideNav />\n            </div>\n            <div className=\"col xl10 l10 m10 s12\">\n              <div className=\"main admin-container-main animate__animated animate__zoomIn\">\n                <div className=\"container-fluid admin-bg\">\n                  <div className=\"row\" style={{margin: '0px'}}>\n                    <div className=\"col xl6 l6 m6 s12\">\n                      <div className=\"my-title\" style={{fontSize: '23px'}}>Prepare test</div>\n                    </div>\n                    <div className=\"col xl6 l6 m6 s12\">\n                      <Link to=\"/tests\" className=\"waves-effect waves-light right my-btn bg-color hoverable main-btn\">View list</Link>\n                    </div>\n                  </div>\n                  {this.state.loading === true ? <center><Loading msg=\"Please wait\" /></center> :\n                  this.props.test.status === false ?\n                  <div className=\"row\" style={{backgroundColor: '#fff', paddingTop: '10px', paddingBottom: '10px', borderRadius: '4px', margin: '0px'}}>\n                    <div className=\"col s12 m10 l10 xl10\">\n                      <span>Test title</span>\n                      <input \n                      onChange={(e) => {\n                        this.props.addTestDetails({\n                          test_title: e.target.value,\n                          test_duration: this.props.test.test_duration,\n                          status: this.props.test.status,\n                        });\n                      }}\n                      type=\"text\" \n                      value={this.props.test.test_title} className=\"validate browser-default my-input\" />\n                    </div>\n                    {/* <div className=\"col s12 m5 l5 xl5\">\n                      <span>Test duration in minutes</span>\n                      <input \n                      onChange={(e) => {\n                        this.props.addTestDetails({\n                          test_title: this.props.test.test_title,\n                          test_duration: e.target.value,\n                          status: this.props.test.status,\n                        });\n                      }}\n                      type=\"number\" \n                      value={this.props.test.test_duration} className=\"validate browser-default my-input\" />\n                    </div> */}\n                    <div className=\"col s12 m2 l2 xl2\" style={{paddingTop: '25px'}}>\n                      <button \n                      onClick={() => {\n                        if (this.props.test.test_title === \"\") {\n                          alert(\"Please fill test title\");\n                        } else {\n                        this.props.addTestDetails({\n                        test_title: this.props.test.test_title,\n                        test_duration: this.props.test.test_duration,\n                        status: true,\n                      })}}} \n                      className=\"waves-effect waves-light right my-btn bg-color hoverable main-btn\">Save changes</button>\n                    </div>\n                  </div> :\n                  <div className=\"row\" style={{backgroundColor: '#fff', paddingTop: '10px', paddingBottom: '10px', borderRadius: '4px', margin: '0px'}}>\n                    <div className=\"col s12 m10 l10 xl10\">\n                      <span>Test title</span>\n                      <div style={{fontWeight: 'bolder'}}>{this.props.test.test_title}</div>\n                    </div>\n                    {/* <div className=\"col s12 m5 l5 xl5\">\n                      <span>Test duration in minutes</span>\n                      <div style={{fontWeight: 'bolder'}}>{this.props.test.test_duration}</div>\n                    </div> */}\n                    <div className=\"col s12 m2 l2 xl2\">\n                      <button \n                      onClick={() => this.props.addTestDetails({\n                        test_title: this.props.test.test_title,\n                        test_duration: this.props.test.test_duration,\n                        status: false,\n                      })} \n                      className=\"waves-effect waves-light right my-btn bg-color hoverable main-btn\">Edit</button>\n                    </div>\n                  </div>}\n                  {this.state.loading === false &&\n                  <div className=\"my-tab\">\n                    <div className=\"row\">\n                      <div className=\"col s3 m3 l3 xl3\">\n                        <div onClick={() => {this.setState({ modal: true })}} className={`${this.state.addQuestionTab === true ? \"active-tab\" : \"inactive-tab\"} add-btn`}><MdAdd className=\"my-add-icon\" /> Add question</div>\n                      </div>\n                      <div className=\"col s3 m3 l3 xl3\">\n                        <div onClick={() => this.setState({ addQuestionTab: false })} className={`${this.state.addQuestionTab === true ? \"inactive-tab\" : \"active-tab\"}`}>List of Questions ({this.props.questions.length})</div>\n                      </div>\n                    </div>\n                  </div>}\n                  {this.state.loading === false &&\n                  <>\n                    {this.state.addQuestionTab === true ?\n                    <TestQuestions /> : <TestQuestionsList />}\n                    {this.state.addQuestionTab === false &&\n                    <div className=\"row\">\n                      <div className=\"col s12\">\n                        <button onClick={() => this.submitExam()} className=\"waves-effect waves-light my-btn bg-color hoverable main-btn right\" style={{marginTop: '20px', marginBottom: '20px'}}>Submit test preparation</button>\n                      </div>\n                    </div>}\n                  </>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.modal === true &&\n        <Modal\n        close={() => this.setState({ modal: false })}\n        backDrop={true}\n        closeBackdrop={false}\n        theme=\"blue\"\n        title=\"Create new question\"\n        className=\"open max-width animate-in animate__animated animate__bounceIn\"\n        >\n          <TestQuestions />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  test: state.prepareTest.test,\n  questions: state.prepareTest.questions,\n});\n\nexport default connect(mapStateToProps, { addTestDetails, addTestQuestion, removeTestQuestion, addTestQuestionAnswer, removeTestQuestionAnswer, clearTestTemps })(PrepareTest);","/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/prepare-test.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/index.js",[],["264","265"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/store.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/shared/Alert/Alert.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/index.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/TopicsList/TopicsList.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/utils/search.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Users/Users.js",["266"],"import React, { Component } from 'react'\nimport AdminNav from '../../components/AdminNav'\nimport AdminSideNav from '../../components/AdminSideNav'\nimport setAuthToken from '../../utils/setAuthToken'\nimport axios from 'axios'\nimport searchData from \"../../utils/search\";\nimport { API_URL } from '../../utils/api'\nimport Loading from '../../shared/Loading/Loading';\nimport { MdDeleteForever } from 'react-icons/md'\n\nexport class Users extends Component {\n    state = {\n        loading: false,\n        users: \"\",\n        search: \"\",\n        modal: true,\n    }\n    loadUsers = async () => {\n        this.setState({ loading: true });\n        try {\n            setAuthToken();\n            const res = await axios.get(`${API_URL}/users`);\n            this.setState({ users: res.data.data });\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(\"Topic err: \", error);\n        }\n    }\n    removeUser = async (user_id) => {\n        this.setState({ loading: true });\n        try {\n            setAuthToken();\n            const res = await axios.delete(`${API_URL}/users/disactive/${user_id}`);\n            this.loadUsers();\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(\"remove err: \", error);\n        }\n    }\n    componentDidMount = () => {\n        this.loadUsers();\n    }\n    render() {\n        return (\n            <div className=\"admin-container\">\n                {console.log(\"users::: \", this.state.users)}\n                {/* Nav Bar here */}\n                <AdminNav />\n                <div className=\"row\">\n                    <div className=\"col xl2 l2 m3 s12\">\n                        {/* Side Nav here */}\n                        <AdminSideNav />\n                    </div>\n                    <div className=\"col xl10 l10 m10 s12\">\n                        <div class=\"main admin-container-main animate__animated animate__zoomIn\">\n                            <div class=\"container-fluid\">\n                                <div className=\"row\" style={{backgroundColor: '#fff', margin: '0px'}}>\n                                    <center>\n                                        <h4 style={{fontSize: '20px', margin: '0px', paddingTop: '36px'}} class=\"my-title\">List of system users</h4>\n                                    </center>\n                                    <div className=\"col xl2 l2 m2 s12\" />\n                                    <div class=\"input-field col xl8 l8 m8 s12 search-topic-container\" style={{margin: \"0px\"}}>\n                                        <i class=\"fas fa-search prefix\" style={{top: '26px'}}></i>\n                                        <input value={this.state.search}  onChange={(e) => { this.setState({ search: e.target.value }) }} placeholder=\"Search topic\" id=\"home-search\" type=\"text\" class=\"home-search-input autocomplete search-topics\" />\n                                    </div>\n                                    <div className=\"col xl2 l2 m2 s12\" />\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col s12 m12\">\n                                        <div class=\"card\">\n                                            <table class=\"bordered highlight responsive-table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>#</th>\n                                                        <th>First name</th>\n                                                        <th>Last name</th>\n                                                        <th>Username</th>\n                                                        <th></th>\n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.loading === true && (\n                                                        <tr>\n                                                            <td colSpan={5}>\n                                                                <center>\n                                                                    <div className=\"list-item\">\n                                                                        <center><Loading msg=\"Please wait\" /></center>\n                                                                    </div>\n                                                                </center>\n                                                            </td>\n                                                        </tr>\n                                                    )}\n\n                                                    {this.state.users === \"\" ? \"\" : \n                                                        this.state.loading === false && searchData(this.state.users, this.state.search, { fname: true, lname: true, username: true }).map((item, i) => (\n                                                            <tr key={i + 1}>\n                                                                <td>{i + 1}</td>\n                                                                <td>{item.fname}</td>\n                                                                <td>{item.lname}</td>\n                                                                <td>{item.username}</td>\n                                                                <td>\n                                                                    <MdDeleteForever className=\"remove-icon right\" onClick={() => this.removeUser(item.user_id)} />\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Users\n","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/AdminCreateTopic/AdminCreateTopic.js",["267","268"],"import React, { Component, Fragment } from 'react'\nimport AdminNav from '../../components/AdminNav'\nimport AdminSideNav from '../../components/AdminSideNav'\nimport { Link } from 'react-router-dom'\nimport CreateTopic from '../CreateTopic/CreateTopic'\n\nexport class PrepareTest extends Component {\n    state = {\n        modal: true,\n    }\n    render() {\n        return (\n          <Fragment>\n            <div className=\"admin-container\">\n                {/* Nav Bar here */}\n                <AdminNav />\n                <div className=\"row\">\n                    <div className=\"col xl12 l12 m12 s12\">\n                        <CreateTopic />\n                    </div>\n                </div>\n            </div>\n          </Fragment>\n        )\n    }\n}\n\nexport default PrepareTest\n","/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/prepare-test.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/TestQuestions/TestQuestions.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/TestQuestionsList/TestQuestionsList.js",["269","270","271","272","273","274","275","276","277","278","279","280","281"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/PrepareTest/Tests/Tests.js",["282","283","284","285","286","287","288","289","290","291"],"import React, { Component, Fragment } from 'react'\nimport AdminNav from '../../../components/AdminNav'\nimport AdminSideNav from '../../../components/AdminSideNav'\nimport axios from \"axios\";\nimport { AiOutlineLoading3Quarters, AiOutlineLogin, AiOutlineUser, } from \"react-icons/ai\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { API_URL, CONFIG } from \"../../../utils/api\";\nimport { TOKEN_NAME } from \"../../../utils/api\";\nimport { connect } from \"react-redux\";\nimport { \n  addTestDetails, \n  addTestQuestion, \n  removeTestQuestion, \n  addTestQuestionAnswer, \n  removeTestQuestionAnswer, \n  clearTestTemps,\n  getTests,\n  setTestStatus,\n } from \"../../../actions/prepare-test\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Loading from '../../../shared/Loading/Loading';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { CgMoreO } from 'react-icons/cg';\n\nexport class Tests extends Component {\n  state = {\n    modal: true,\n    addQuestionTab: false,\n    loading: false,\n    smallLoading: false,\n    selectedTest: \"\",\n  }\n\n  setLoading = (status) => {\n    this.setState({ loading: status });\n  }\n  setSemiLoading = (status) => {\n    this.setState({ smallLoading: status });\n  }\n\n  componentDidMount = () => {\n    this.props.getTests(this.setLoading);\n  }\n  \n  render() {\n    return (\n      <Fragment>\n        <div className=\"admin-container\">\n          {/* Nav Bar here */}\n          <AdminNav />\n          <div className=\"row\">\n            <div className=\"col xl2 l2 m3 s12\">\n              {/* Side Nav here */}\n              <AdminSideNav />\n            </div>\n            <div className=\"col xl10 l10 m10 s12\">\n              <div className=\"main admin-container-main animate__animated animate__zoomIn\">\n                <div className=\"container-fluid admin-bg\">\n                  <div className=\"row\" style={{margin: '0px'}}>\n                    <div className=\"col xl6 l6 m6 s12\">\n                      <div className=\"my-title\" style={{fontSize: '23px'}}>List of tests</div>\n                    </div>\n                    <div className=\"col xl6 l6 m6 s12\">\n                      <Link to=\"/test\" className=\"waves-effect waves-light right my-btn bg-color hoverable main-btn\">Add test</Link>\n                    </div>\n                  </div>\n                  {this.state.loading === true ? <center><Loading msg=\"Please wait\" /></center> :\n                  <div>\n                    <div className=\"white\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>Test</th>\n                            <th>Duration</th>\n                            <th></th>\n                            <th className=\"right\">Status</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.props.testsList !== null && this.props.testsList.map((item, i) => (\n                            <tr key={i + 1} style={item.published === 1 ? {color: 'green', fontWeight: 'bold', backgroundColor: '#edffed'} : {}}>\n                              <td>{i + 1}</td>\n                              <td>{item.title}</td>\n                              <td>{item.duration}</td>\n                              <td>\n                                <div className=\"right\">\n                                  <div className=\"switch\">\n                                    <label style={item.published === 1 ? {color: 'green'} : {}}>\n                                      Off\n                                      <input onChange={() => {this.state.smallLoading === false && this.props.setTestStatus(item.test_id, item.published === 1 ? false : true, this.setSemiLoading); this.state.smallLoading === false && this.setState({ selectedTest: item.test_id })}} type=\"checkbox\" checked={item.published === 1 ? true : false} />\n                                      <span className=\"lever\"></span>\n                                      On\n                                    </label>\n                                  </div>\n                                  {/* <MdDeleteForever style={{fontSize: '36px', color: '#a80000', cursor: 'pointer'}} className=\"right\" onClick={() => alert(\"Under construction\")} /> */}\n                                </div>\n                              </td>\n                              <td>\n                                <span className=\"center\" style={{color: this.state.smallLoading === true && this.state.selectedTest === item.test_id ? \"orange\" : \"black\", marginLeft: '5px', marginRight: '20px', fontWeight: 'bold'}}>{this.state.smallLoading === true && this.state.selectedTest === item.test_id ? \"Saving...\" : item.published === 1 ? \"Published\" : \"Disabled\"}</span>\n                                <Link to={`/tests/${item.test_id}`}><CgMoreO className=\"my-icon-arrow right\"/></Link>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  test: state.prepareTest.test,\n  questions: state.prepareTest.questions,\n  testsList: state.prepareTest.testsList,\n});\n\nexport default connect(mapStateToProps, { addTestDetails, addTestQuestion, removeTestQuestion, addTestQuestionAnswer, removeTestQuestionAnswer, clearTestTemps, getTests, setTestStatus })(Tests);","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/DoTest/DoTest.js",["292","293","294","295","296","297","298","299","300","301"],"/Users/niyongabo/dev/Projects/forum-with-questions/src/actions/do-test.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/reducers/do-test.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/PublicFooter.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Users/Admins.js",["302"],"import React, { Component } from \"react\";\nimport AdminNav from \"../../components/AdminNav\";\nimport AdminSideNav from \"../../components/AdminSideNav\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport axios from \"axios\";\nimport searchData from \"../../utils/search\";\nimport { API_URL } from \"../../utils/api\";\nimport Loading from \"../../shared/Loading/Loading\";\nimport { Link } from \"react-router-dom\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { LogoutTheUser, toogleNav } from \"../../actions/auth\";\n\nexport class Admins extends Component {\n  state = {\n    loading: false,\n    users: \"\",\n    search: \"\",\n    modal: true,\n  };\n  loadAdmins = async () => {\n    this.setState({ loading: true });\n    try {\n      setAuthToken();\n      const res = await axios.get(`${API_URL}/admin`);\n      console.log(\"Admins: \", res.data);\n      this.setState({ users: res.data });\n      this.setState({ loading: false });\n    } catch (error) {\n      this.setState({ loading: false });\n      console.log(\"Topic err: \", error);\n    }\n  };\n  removeAdmin = async (admin_id) => {\n    this.setState({ loading: true });\n    try {\n      setAuthToken();\n      const res = await axios.delete(`${API_URL}/admin/disactive/${admin_id}`);\n      this.loadAdmins();\n    } catch (error) {\n      this.setState({ loading: false });\n      console.log(\"remove err: \", error);\n    }\n  };\n  componentDidMount = () => {\n    this.loadAdmins();\n  };\n  render() {\n    const user =\n      this.props.auth.userCategory === \"admin\"\n        ? this.props.auth.user !== null\n          ? this.props.auth.user\n          : this.props.auth.data\n        : null;\n    return (\n      <div className=\"admin-container\">\n        {console.log(\"users::: \", this.state.users)}\n        {/* Nav Bar here */}\n        <AdminNav />\n        <div className=\"row\">\n          <div className=\"col xl2 l2 m3 s12\">\n            {/* Side Nav here */}\n            <AdminSideNav />\n          </div>\n          <div className=\"col xl10 l10 m10 s12\">\n            <div class=\"main admin-container-main animate__animated animate__zoomIn\">\n              <div class=\"container-fluid\">\n                <div\n                  className=\"row\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    margin: \"0px\",\n                    paddingTop: \"20px\",\n                  }}\n                >\n                  <div className=\"col m6 l6 xl6\">\n                    <h4\n                      style={{\n                        fontSize: \"20px\",\n                        margin: \"0px\",\n                        marginLeft: \"10px\",\n                      }}\n                      class=\"my-title\"\n                    >\n                      List of system administrators\n                    </h4>\n                  </div>\n                  <div className=\"col m6 l6 xl6\">\n                    {user !== null && user.category === 1 && (\n                      <Link\n                        to=\"/register-admin\"\n                        className=\"waves-effect waves-light right my-btn hoverable main-btn\"\n                      >\n                        Add new\n                      </Link>\n                    )}\n                  </div>\n                  <div className=\"col xl2 l2 m2 s12\" />\n                  <div\n                    class=\"input-field col xl8 l8 m8 s12 search-topic-container\"\n                    style={{ margin: \"0px\" }}\n                  >\n                    <i class=\"fas fa-search prefix\" style={{ top: \"26px\" }}></i>\n                    <input\n                      value={this.state.search}\n                      onChange={(e) => {\n                        this.setState({ search: e.target.value });\n                      }}\n                      placeholder=\"Search topic\"\n                      id=\"home-search\"\n                      type=\"text\"\n                      class=\"home-search-input autocomplete search-topics\"\n                    />\n                  </div>\n                  <div className=\"col xl2 l2 m2 s12\" />\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s12 m12\">\n                    <div class=\"card\">\n                      <table class=\"bordered highlight responsive-table\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Email</th>\n                            <th>Account type</th>\n                            <th></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.loading === true && (\n                            <tr>\n                              <td colSpan={6}>\n                                <center>\n                                  <div className=\"list-item\">\n                                    <center>\n                                      <Loading msg=\"Please wait\" />\n                                    </center>\n                                  </div>\n                                </center>\n                              </td>\n                            </tr>\n                          )}\n\n                          {this.state.users === \"\"\n                            ? \"\"\n                            : this.state.loading === false &&\n                              searchData(this.state.users, this.state.search, {\n                                fname: true,\n                                lname: true,\n                                email: true,\n                              }).map((item, i) => (\n                                <tr\n                                  style={\n                                    item.category === 1\n                                      ? { fontWeight: \"bold\", color: \"#004ddb\" }\n                                      : {}\n                                  }\n                                  key={i + 1}\n                                >\n                                  <td>{i + 1}</td>\n                                  <td>{item.fname}</td>\n                                  <td>{item.lname}</td>\n                                  <td>{item.email}</td>\n                                  <td>\n                                    {item.category === 1\n                                      ? \"Super Admin\"\n                                      : \"Standard Admin\"}\n                                  </td>\n                                  <td>\n                                    {user !== null && user.category === 1 && (\n                                      <MdDeleteForever\n                                        className=\"remove-icon right\"\n                                        onClick={() =>\n                                          this.removeAdmin(item.admin_id)\n                                        }\n                                      />\n                                    )}\n                                  </td>\n                                </tr>\n                              ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAdmins.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  toogleNav: state.toogleNav,\n  userCategory: state.userCategory,\n});\nexport default connect(mapStateToProps, { LogoutTheUser, toogleNav })(Admins);\n","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/Users/RegisterAdmin.js",["303"],"import React, { Component } from 'react'\nimport AdminNav from '../../components/AdminNav'\nimport { Link } from 'react-router-dom'\nimport AdminSideNav from '../../components/AdminSideNav'\nimport axios from 'axios'\nimport { API_URL } from '../../utils/api'\nimport Loading from '../../shared/Loading/Loading';\nimport Alert from '../../shared/Alert/Alert';\nimport { AiOutlineLogin } from 'react-icons/ai'\n\nexport class RegisterAdmins extends Component {\n    state = {\n        loading: false,\n        modal: true,\n        loading: false,\n        error: { element: \"\", msg: \"\" },\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        password: \"\",\n        loggedMember: \"\",\n    }\n\n    componentDidMount = () => {\n      \n    }\n    registerAdmin = async (e) => {\n      e.preventDefault();\n      \n      console.log(\"Button clicked!\");\n      this.setState({error: {\n          element: \"\",\n          msg: \"\",\n      }});\n      try {\n          // validation\n          if (this.state.fname.length <= 1) {\n              return this.setState({error: {\n                  element: \"fname\",\n                  msg: \"The first name must not be less than 1 character\",\n              }});\n          }\n          if (this.state.lname.length <= 1) {\n              return this.setState({error: {\n                  element: \"lname\",\n                  msg: \"The last name must not be less than 1 character\",\n              }});\n          }\n      \n          if (this.state.email.length <= 1) {\n              return this.setState({error: {\n                  element: \"email\",\n                  msg: \"The email must not be less than 1 character\",\n              }});\n          }\n      \n      \n          // password\n          if (this.state.password.length <= 1) {\n              return this.setState({error: {\n                  element: \"password\",\n                  msg: \"The password must not be less than 1 character\",\n              }});\n          }\n  \n          this.setState({loading: true});\n\n          let fname = this.state.fname;\n          let lname = this.state.lname;\n          let email = this.state.email;\n          let password = this.state.password;\n\n          await axios.post(\n              `${API_URL}/admin`,\n              {\n                  fname,\n                  lname,\n                  email,\n                  password,\n              }\n          );\n          this.setState({loading: false});\n          this.props.history.push(\"/admins\"); \n      // errors\n      } catch (error) {\n          console.log(\"Reg err: \", {...error});\n          this.setState({loading: false});\n  \n          if (error.response === undefined) {\n              return this.setState({error: {\n                  element: \"main\",\n                  msg: \"Network error!\",\n              }});\n          }\n      \n          if (error.response.status === 401) {\n              return this.setState({error: {\n                  element: \"main\",\n                  msg: error.response.data.msg,\n              }});\n          } else if (error.response.status === 400) {\n              return this.setState({error: {\n                  element: \"main\",\n                  msg: error.response.data.errors ? error.response.data.errors[0].msg : \"Something went wrong\",\n              }});\n          } else {\n              return this.setState({error: {\n                  element: \"main\",\n                  msg: error.response.data.msg,\n              }});\n          }\n      }\n    };\n    render() {\n        return (\n            <div className=\"admin-container\">\n                {console.log(\"users::: \", this.state.users)}\n                {/* Nav Bar here */}\n                <AdminNav />\n                <div className=\"row\">\n                    <div className=\"col xl2 l2 m3 s12\">\n                        {/* Side Nav here */}\n                        <AdminSideNav />\n                    </div>\n                    <div className=\"col xl10 l10 m10 s12\">\n                        <div class=\"main admin-container-main animate__animated animate__zoomIn\">\n                            <div class=\"container-fluid\">\n                                <div className=\"row\" style={{backgroundColor: '#fff', margin: '0px', paddingTop: '20px'}}>\n                                    <div className=\"col m6 l6 xl6\">\n                                        <h4 style={{fontSize: '20px', margin: '0px', marginLeft: '10px'}} class=\"my-title\">Register new administrator</h4>\n                                    </div>\n                                    <div className=\"col m6 l6 xl6\">\n                                      <Link to=\"/users\" className=\"waves-effect waves-light right my-btn hoverable main-btn\" style={{marginBottom: '10px'}}>View list</Link>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col s12 m12\">\n                                        <div class=\"card\" style={{padding: '10px'}}>\n                                            <form onSubmit={this.registerAdmin}>\n                                              <div className=\"row\">\n                                                  <div className=\"input-field col s12\">\n                                                      <input\n                                                          onChange={(e) => {\n                                                              this.setState({fname: e.target.value});\n                                                              this.setState({error: { element: \"\", msg: \"\" }});\n                                                          }}\n                                                          value={this.state.fname}\n                                                          disabled={this.state.loading}\n                                                          placeholder=\"First name\" type=\"text\" className={`validate browser-default my-input ${this.state.error.element === \"fname\" ? 'danger-input' : ''}`} />\n                                                      {this.state.error.element === \"fname\" ? (\n                                                          <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                                      ) : \"\"}\n                                                      \n                                                  </div>\n                                                  <div className=\"input-field col s12\">\n                                                      <input\n                                                          onChange={(e) => {\n                                                              this.setState({lname: e.target.value});\n                                                              this.setState({error: { element: \"\", msg: \"\" }});\n                                                          }}\n                                                          value={this.state.lname}\n                                                          disabled={this.state.loading}\n                                                          placeholder=\"Last name\" type=\"text\" className={`validate browser-default my-input ${this.state.error.element === \"lname\" ? 'danger-input' : ''}`} />\n                                                      {this.state.error.element === \"lname\" ? (\n                                                          <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                                      ) : \"\"}\n                                                      \n                                                  </div>\n                                                  <div className=\"input-field col s12\">\n                                                      <input\n                                                          onChange={(e) => {\n                                                              this.setState({email: e.target.value});\n                                                              this.setState({error: { element: \"\", msg: \"\" }});\n                                                          }}\n                                                          value={this.state.email}\n                                                          disabled={this.state.loading}\n                                                          placeholder=\"email\" type=\"text\" className={`validate browser-default my-input ${this.state.error.element === \"email\" ? 'danger-input' : ''}`} />\n                                                      {this.state.error.element === \"email\" ? (\n                                                          <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                                      ) : \"\"}\n                                                      \n                                                  </div>\n                                                  <div className=\"input-field col s12\">\n                                                      <input\n                                                          onChange={(e) => {\n                                                              this.setState({password: e.target.value});\n                                                              this.setState({error: { element: \"\", msg: \"\" }});\n                                                          }}\n                                                          value={this.state.password}\n                                                          disabled={this.state.loading}\n                                                          placeholder=\"Password\" type=\"password\" className={`validate browser-default my-input ${this.state.error.element === \"password\" ? 'danger-input': ''}`} />\n                                                      {this.state.error.element === \"password\" ? (\n                                                          <span className=\"helper-text danger-color\">{this.state.error.msg}</span>\n                                                      ) : \"\"}\n                                                      \n                                                  </div> \n                                                  <div className=\"input-field col s12\">\n                                                      <center>\n                                                          <Alert alert=\"danger\" msg={this.state.error.element === \"main\" ? (this.state.error.msg) : ''} />\n                                                          {this.state.loading === true ? (<Loading msg=\"Please wait\" />) : \n                                                          (<button type=\"submit\" className=\"my-btn bg-color hoverable main-btn\"><AiOutlineLogin className=\"icon\" /> Register</button>)}\n                                                      </center>\n                                                  </div>\n                                              </div>\n                                          </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RegisterAdmins\n","/Users/niyongabo/dev/Projects/forum-with-questions/src/containers/TestResults/TestResults.js",[],"/Users/niyongabo/dev/Projects/forum-with-questions/src/components/EditorToolbar/EditorToolbar.js",["304","305"],"import React from \"react\";\nimport { Quill } from \"react-quill\";\n\n// Custom Undo button icon component for Quill editor. You can import it directly\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\n// handle them correctly\n\nconst CustomUndo = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n  \"arial\",\n  \"comic-sans\",\n  \"courier-new\",\n  \"georgia\",\n  \"helvetica\",\n  \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\n// export const modules = {\n//   toolbar: {\n//     container: \"#toolbar\",\n//     handlers: {\n//       undo: undoChange,\n//       redo: redoChange\n//     }\n//   },\n//   history: {\n//     delay: 500,\n//     maxStack: 100,\n//     userOnly: true\n//   }\n// };\n\n// Formats objects for setting up the Quill editor\nexport const formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"align\",\n  \"strike\",\n  \"script\",\n  \"blockquote\",\n  \"background\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"color\",\n  \"code-block\",\n  \"video\",\n];\n\n// Quill Toolbar component\nexport const QuillToolbar = (props) => (\n  <div id={props.id}>\n    <span className=\"ql-formats\">\n      <select className=\"ql-font\" defaultValue=\"arial\">\n        <option value=\"arial\">Arial</option>\n        <option value=\"comic-sans\">Comic Sans</option>\n        <option value=\"courier-new\">Courier New</option>\n        <option value=\"georgia\">Georgia</option>\n        <option value=\"helvetica\">Helvetica</option>\n        <option value=\"lucida\">Lucida</option>\n      </select>\n      <select className=\"ql-size\" defaultValue=\"medium\">\n        <option value=\"extra-small\">Size 1</option>\n        <option value=\"small\">Size 2</option>\n        <option value=\"medium\">Size 3</option>\n        <option value=\"large\">Size 4</option>\n      </select>\n      <select className=\"ql-header\" defaultValue=\"3\">\n        <option value=\"1\">Heading</option>\n        <option value=\"2\">Subheading</option>\n        <option value=\"3\">Normal</option>\n      </select>\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-bold\" />\n      <button className=\"ql-italic\" />\n      <button className=\"ql-underline\" />\n      <button className=\"ql-strike\" />\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-list\" value=\"ordered\" />\n      <button className=\"ql-list\" value=\"bullet\" />\n      <button className=\"ql-indent\" value=\"-1\" />\n      <button className=\"ql-indent\" value=\"+1\" />\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-script\" value=\"super\" />\n      <button className=\"ql-script\" value=\"sub\" />\n      <button className=\"ql-blockquote\" />\n      <button className=\"ql-direction\" />\n    </span>\n    <span className=\"ql-formats\">\n      <select className=\"ql-align\" />\n      <select className=\"ql-color\" />\n      <select className=\"ql-background\" />\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-link\" />\n      <button className=\"ql-image\" />\n      <button className=\"ql-video\" />\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-formula\" />\n      <button className=\"ql-code-block\" />\n      <button className=\"ql-clean\" />\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-undo\">\n        <CustomUndo />\n      </button>\n      <button className=\"ql-redo\">\n        <CustomRedo />\n      </button>\n    </span>\n  </div>\n);\n\nexport default QuillToolbar;","/Users/niyongabo/dev/Projects/forum-with-questions/src/components/EditorComponent/EditorComponent.jsx",[],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":219,"column":144,"nodeType":"312","messageId":"313","endLine":219,"endColumn":145},{"ruleId":"314","severity":1,"message":"315","line":3,"column":26,"nodeType":"316","messageId":"317","endLine":3,"endColumn":39},{"ruleId":"314","severity":1,"message":"318","line":6,"column":10,"nodeType":"316","messageId":"317","endLine":6,"endColumn":20},{"ruleId":"314","severity":1,"message":"319","line":12,"column":8,"nodeType":"316","messageId":"317","endLine":12,"endColumn":20},{"ruleId":"314","severity":1,"message":"320","line":13,"column":8,"nodeType":"316","messageId":"317","endLine":13,"endColumn":13},{"ruleId":"314","severity":1,"message":"321","line":14,"column":10,"nodeType":"316","messageId":"317","endLine":14,"endColumn":26},{"ruleId":"314","severity":1,"message":"322","line":81,"column":19,"nodeType":"316","messageId":"317","endLine":81,"endColumn":22},{"ruleId":"306","replacedBy":"323"},{"ruleId":"308","replacedBy":"324"},{"ruleId":"314","severity":1,"message":"325","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":18},{"ruleId":"314","severity":1,"message":"326","line":7,"column":10,"nodeType":"316","messageId":"317","endLine":7,"endColumn":17},{"ruleId":"314","severity":1,"message":"327","line":8,"column":8,"nodeType":"316","messageId":"317","endLine":8,"endColumn":17},{"ruleId":"314","severity":1,"message":"328","line":9,"column":10,"nodeType":"316","messageId":"317","endLine":9,"endColumn":23},{"ruleId":"314","severity":1,"message":"329","line":9,"column":25,"nodeType":"316","messageId":"317","endLine":9,"endColumn":34},{"ruleId":"314","severity":1,"message":"330","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":14},{"ruleId":"306","replacedBy":"331"},{"ruleId":"308","replacedBy":"332"},{"ruleId":"306","replacedBy":"333"},{"ruleId":"308","replacedBy":"334"},{"ruleId":"306","replacedBy":"335"},{"ruleId":"308","replacedBy":"336"},{"ruleId":"314","severity":1,"message":"337","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":25},{"ruleId":"314","severity":1,"message":"338","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"314","severity":1,"message":"339","line":4,"column":18,"nodeType":"316","messageId":"317","endLine":4,"endColumn":23},{"ruleId":"314","severity":1,"message":"340","line":4,"column":25,"nodeType":"316","messageId":"317","endLine":4,"endColumn":36},{"ruleId":"314","severity":1,"message":"341","line":4,"column":38,"nodeType":"316","messageId":"317","endLine":4,"endColumn":45},{"ruleId":"314","severity":1,"message":"342","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":14},{"ruleId":"314","severity":1,"message":"343","line":5,"column":17,"nodeType":"316","messageId":"317","endLine":5,"endColumn":26},{"ruleId":"314","severity":1,"message":"344","line":7,"column":10,"nodeType":"316","messageId":"317","endLine":7,"endColumn":16},{"ruleId":"314","severity":1,"message":"345","line":64,"column":7,"nodeType":"316","messageId":"317","endLine":64,"endColumn":16},{"ruleId":"314","severity":1,"message":"346","line":65,"column":11,"nodeType":"316","messageId":"317","endLine":65,"endColumn":20},{"ruleId":"314","severity":1,"message":"347","line":66,"column":11,"nodeType":"316","messageId":"317","endLine":66,"endColumn":21},{"ruleId":"306","replacedBy":"348"},{"ruleId":"308","replacedBy":"349"},{"ruleId":"306","replacedBy":"350"},{"ruleId":"308","replacedBy":"351"},{"ruleId":"314","severity":1,"message":"352","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":5,"column":26,"nodeType":"316","messageId":"317","endLine":5,"endColumn":39},{"ruleId":"314","severity":1,"message":"353","line":6,"column":16,"nodeType":"316","messageId":"317","endLine":6,"endColumn":23},{"ruleId":"314","severity":1,"message":"354","line":7,"column":19,"nodeType":"316","messageId":"317","endLine":7,"endColumn":25},{"ruleId":"314","severity":1,"message":"318","line":8,"column":10,"nodeType":"316","messageId":"317","endLine":8,"endColumn":20},{"ruleId":"306","replacedBy":"355"},{"ruleId":"308","replacedBy":"356"},{"ruleId":"314","severity":1,"message":"322","line":34,"column":19,"nodeType":"316","messageId":"317","endLine":34,"endColumn":22},{"ruleId":"314","severity":1,"message":"357","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":20},{"ruleId":"314","severity":1,"message":"358","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":14},{"ruleId":"314","severity":1,"message":"359","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":13},{"ruleId":"314","severity":1,"message":"352","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":3,"column":26,"nodeType":"316","messageId":"317","endLine":3,"endColumn":39},{"ruleId":"314","severity":1,"message":"358","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":14},{"ruleId":"314","severity":1,"message":"353","line":4,"column":16,"nodeType":"316","messageId":"317","endLine":4,"endColumn":23},{"ruleId":"314","severity":1,"message":"360","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":17},{"ruleId":"314","severity":1,"message":"354","line":5,"column":19,"nodeType":"316","messageId":"317","endLine":5,"endColumn":25},{"ruleId":"314","severity":1,"message":"318","line":6,"column":10,"nodeType":"316","messageId":"317","endLine":6,"endColumn":20},{"ruleId":"314","severity":1,"message":"361","line":9,"column":10,"nodeType":"316","messageId":"317","endLine":9,"endColumn":32},{"ruleId":"314","severity":1,"message":"362","line":9,"column":34,"nodeType":"316","messageId":"317","endLine":9,"endColumn":44},{"ruleId":"314","severity":1,"message":"363","line":9,"column":46,"nodeType":"316","messageId":"317","endLine":9,"endColumn":59},{"ruleId":"314","severity":1,"message":"364","line":9,"column":61,"nodeType":"316","messageId":"317","endLine":9,"endColumn":83},{"ruleId":"314","severity":1,"message":"365","line":10,"column":16,"nodeType":"316","messageId":"317","endLine":10,"endColumn":22},{"ruleId":"314","severity":1,"message":"359","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":13},{"ruleId":"314","severity":1,"message":"366","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":35},{"ruleId":"314","severity":1,"message":"352","line":5,"column":37,"nodeType":"316","messageId":"317","endLine":5,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":5,"column":53,"nodeType":"316","messageId":"317","endLine":5,"endColumn":66},{"ruleId":"314","severity":1,"message":"353","line":6,"column":16,"nodeType":"316","messageId":"317","endLine":6,"endColumn":23},{"ruleId":"314","severity":1,"message":"360","line":7,"column":10,"nodeType":"316","messageId":"317","endLine":7,"endColumn":17},{"ruleId":"314","severity":1,"message":"354","line":7,"column":19,"nodeType":"316","messageId":"317","endLine":7,"endColumn":25},{"ruleId":"314","severity":1,"message":"318","line":8,"column":10,"nodeType":"316","messageId":"317","endLine":8,"endColumn":20},{"ruleId":"314","severity":1,"message":"365","line":20,"column":16,"nodeType":"316","messageId":"317","endLine":20,"endColumn":22},{"ruleId":"314","severity":1,"message":"367","line":22,"column":10,"nodeType":"316","messageId":"317","endLine":22,"endColumn":25},{"ruleId":"314","severity":1,"message":"368","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":16},{"ruleId":"314","severity":1,"message":"357","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":20},{"ruleId":"314","severity":1,"message":"359","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":13},{"ruleId":"314","severity":1,"message":"366","line":6,"column":3,"nodeType":"316","messageId":"317","endLine":6,"endColumn":28},{"ruleId":"314","severity":1,"message":"352","line":7,"column":3,"nodeType":"316","messageId":"317","endLine":7,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":8,"column":3,"nodeType":"316","messageId":"317","endLine":8,"endColumn":16},{"ruleId":"314","severity":1,"message":"353","line":10,"column":16,"nodeType":"316","messageId":"317","endLine":10,"endColumn":23},{"ruleId":"314","severity":1,"message":"360","line":11,"column":10,"nodeType":"316","messageId":"317","endLine":11,"endColumn":17},{"ruleId":"314","severity":1,"message":"354","line":11,"column":19,"nodeType":"316","messageId":"317","endLine":11,"endColumn":25},{"ruleId":"314","severity":1,"message":"318","line":12,"column":10,"nodeType":"316","messageId":"317","endLine":12,"endColumn":20},{"ruleId":"314","severity":1,"message":"322","line":39,"column":13,"nodeType":"316","messageId":"317","endLine":39,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":15,"column":9,"nodeType":"371","messageId":"372","endLine":15,"endColumn":16},{"ruleId":"314","severity":1,"message":"373","line":30,"column":10,"nodeType":"316","messageId":"317","endLine":30,"endColumn":20},{"ruleId":"314","severity":1,"message":"374","line":33,"column":10,"nodeType":"316","messageId":"317","endLine":33,"endColumn":20},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'AiOutlineUser' is defined but never used.","Identifier","unusedVar","'TOKEN_NAME' is defined but never used.","'PublicFooter' is defined but never used.","'Modal' is defined but never used.","'ACCOUNT_CATEGORY' is defined but never used.","'res' is assigned a value but never used.",["375"],["376"],"'searchData' is defined but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","'LogoutTheUser' is defined but never used.","'toogleNav' is defined but never used.","'SubNav' is defined but never used.",["375"],["376"],["375"],["376"],["375"],["376"],"'useState' is defined but never used.","'bounce' is defined but never used.","'pulse' is defined but never used.","'slideInDown' is defined but never used.","'flipInX' is defined but never used.","'Radium' is defined but never used.","'StyleRoot' is defined but never used.","'MdInfo' is defined but never used.","'editImage' is assigned a value but never used.","'imageFile' is assigned a value but never used.","'imageState' is assigned a value but never used.",["375"],["376"],["375"],["376"],"'AiOutlineLogin' is defined but never used.","'NavLink' is defined but never used.","'CONFIG' is defined but never used.",["375"],["376"],"'AdminSideNav' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'API_URL' is defined but never used.","'MdCheckBoxOutlineBlank' is defined but never used.","'MdCheckBox' is defined but never used.","'MdCheckCircle' is defined but never used.","'MdRadioButtonUnchecked' is defined but never used.","'uuidv4' is defined but never used.","'AiOutlineLoading3Quarters' is defined but never used.","'MdDeleteForever' is defined but never used.","'AdminNav' is defined but never used.","no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","unexpected","'undoChange' is defined but never used.","'redoChange' is defined but never used.","no-global-assign","no-unsafe-negation"]